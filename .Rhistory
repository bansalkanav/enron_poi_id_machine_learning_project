install.packages("swirl")
library(swirl)
swir()
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
z
?c
z
z, 555, z
z 55 z
z 555 z
z, 555, z
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z -1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_sqrt
my_div
q()
udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla")
udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla")
udacious
numbers <- c(1:10)
numbers
numbers <- c(numbers, 11:20)
numbers
udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla", "Alona Varshal")
mystery = nchar(udacious)
mystery
mystery == 11
udacious[mystery == 11]
data(mtcars)
names(mtcars)
?mtcars
mtcars
str(mtcars)
dim(mtcars)
?row.names
row.names(mtcars)
row.names(mtcars) <- c(1:32)
mtcars
data(mtcars)
head(mtcars, 10)
tail(mtcars, 3)
mtcars$mpg
mean(mtcars$mpg)
dacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla")
udacious
udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla")
udacious
numbers <- c(1:10)
numbers
numbers <- c(numbers, 11:20)
numbers
udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla", "Alona Varshal")
mystery = nchar(udacious)
mystery
mystery == 11
udacious[mystery == 11]
data(mtcars)
names(mtcars)
?mtcars
mtcars
str(mtcars)
dim(mtcars)
?row.names
# (all of these variables are numerics) and some values for each
row.names(mtcars)
row.names(mtcars) <- c(1:32)
mtcars
data(mtcars)
head(mtcars, 10)
tail(mtcars, 3)
mtcars$mpg
mean(mtcars$mpg)
summary(mtcars)
efficient <- subset(cars, cars.mpg > 22)
efficient <- subset(cars, mpg > 22)
data(cars)
dim(cars)
names(cars)
summary(mtcars)
names(mtcars)
efficient <- subset(mtcars, mtcars.mpg > 22)
efficient <- subset(mtcars, mpg > 22)
efficient
length(efficient)
clearPushBack()
udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla")
library(ggplot2)
data("diamonds")
names(diamonds)
ggplot(aes(x = x, y = price), data = diamonds) +
geom_point()
data("diamonds")
library(ggplot2)
ggplot(aes(x = carat, y = price), data = diamonds) +
geom_point(fill = 'green', color = 'black', shape = 21) +
scale_y_continuous(limits = c(0, quantile(diamonds$price, 0.99))) +
scale_x_continuous(limits = c(0, quantile(diamonds$carat, 0.99)))
ggplot(aes(x = carat, y = price), data = diamonds) +
geom_point(fill = 'green', color = 'black', shape = 21) +
stat_smooth(method = 'lm') +
scale_y_continuous(limits = c(0, quantile(diamonds$price, 0.99))) +
scale_x_continuous(limits = c(0, quantile(diamonds$carat, 0.99)))
# install these if necessary
#install.packages('GGally')
install.packages('scales')
install.packages('memisc')
library(corrplot)
setwd('~/DataScience/udacity/dand/intro_to_ml_project')
enronds <- read.csv('my_dataset.csv')
enron <- subset(enronds, select=-c(email_address,from_messages, from_poi_to_this_person, from_this_person_to_poi, to_messages))
enron$poi <- NULL
enron$X <- NULL
cor(enron)
enron[is.na(enron)] <- 0
corrplot(cor(enron), method = "number", tl.cex = 0.5)
corrplot(cor(enron, method='Spearman'), method = "number", tl.cex = 0.5)
corrplot(cor(enron, method='spearman'), method = "number", tl.cex = 0.5)
